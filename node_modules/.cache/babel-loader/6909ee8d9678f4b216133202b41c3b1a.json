{"ast":null,"code":"var _jsxFileName = \"/media/bkmob/d9c3015e-7c1a-417b-9e34-17a798e49b02/pragmania-web/src/components/List/index.js\";\nimport React from 'react';\nimport { localStorageAction } from '../../Actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ListItem from './/listItem';\n\nfunction Index() {\n  const dispatch = useDispatch();\n  const messagesRedux = useSelector(state => state.messages);\n  const messages = localStorage.getItem('messages') ? localStorage.getItem('messages') : messagesRedux;\n  let retrievedObject = localStorage.getItem('messages');\n  console.log('LocalStorage MESSAGES:', retrievedObject);\n  console.log('State length:', messagesRedux.length);\n\n  if (localStorage.getItem('messages') && messagesRedux.length < 1) {\n    dispatch(localStorageAction(localStorage.getItem('messages')));\n  } //console.log('LİST',messagesRedux)\n\n\n  return /*#__PURE__*/React.createElement(Lis, {\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \" \");\n}\n\nfunction Lis({\n  messages = []\n}) {\n  if (!messages) {\n    return null;\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, messages.map(mess => /*#__PURE__*/React.createElement(ListItem, {\n      message: mess.message,\n      name: mess.name,\n      date: mess.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n\nexport default Index;","map":{"version":3,"sources":["/media/bkmob/d9c3015e-7c1a-417b-9e34-17a798e49b02/pragmania-web/src/components/List/index.js"],"names":["React","localStorageAction","useSelector","useDispatch","ListItem","Index","dispatch","messagesRedux","state","messages","localStorage","getItem","retrievedObject","console","log","length","Lis","map","mess","message","name","date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,QAAiC,eAAjC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEC,SAASC,KAAT,GAAiB;AAEd,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,aAAa,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAAjC;AACA,QAAMA,QAAQ,GAAKC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCD,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAnC,GAAsEJ,aAAzF;AACA,MAAIK,eAAe,GAAGF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAtB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCF,eAArC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BP,aAAa,CAACQ,MAA1C;;AACA,MAAGL,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAoCJ,aAAa,CAACQ,MAAd,GAAuB,CAA9D,EAAgE;AAC7DT,IAAAA,QAAQ,CAACL,kBAAkB,CAACS,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,CAAnB,CAAR;AACF,GAVa,CAWd;;;AAEA,sBACI,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAIF,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAGH;;AACD,SAASO,GAAT,CAAa;AAAEP,EAAAA,QAAQ,GAAG;AAAb,CAAb,EAAgC;AAC5B,MAAI,CAACA,QAAL,EAAe;AACZ,WAAO,IAAP;AACF,GAFD,MAGK;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCA,QAAQ,CAACQ,GAAT,CAAaC,IAAI,iBAClB,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEA,IAAI,CAACC,OAAxB;AAAiC,MAAA,IAAI,EAAED,IAAI,CAACE,IAA5C;AAAkD,MAAA,IAAI,EAAEF,IAAI,CAACG,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,CADD,CADJ;AAOH;AACF;;AAEH,eAAehB,KAAf","sourcesContent":["import React from 'react'\nimport {localStorageAction} from '../../Actions'\nimport {useSelector, useDispatch} from 'react-redux'\nimport ListItem from './/listItem'\n\n function Index() {\n\n    const dispatch = useDispatch()\n    const messagesRedux = useSelector(state => state.messages);\n    const messages =   localStorage.getItem('messages') ? localStorage.getItem('messages') : messagesRedux \n    let retrievedObject = localStorage.getItem('messages');\n    console.log('LocalStorage MESSAGES:',retrievedObject)\n    console.log('State length:',messagesRedux.length)\n    if(localStorage.getItem('messages') && messagesRedux.length < 1){\n       dispatch(localStorageAction(localStorage.getItem('messages')))\n    }\n    //console.log('LİST',messagesRedux)\n  \n    return (\n        <Lis messages = {messages}> </Lis>\n    )\n}\nfunction Lis({ messages = [] }) {\n    if (!messages) {\n       return null;\n    }\n    else {\n        return (\n            <div>\n            {messages.map(mess => (\n            <ListItem message={mess.message} name={mess.name} date={mess.date}></ListItem>\n             ))}\n            </div>\n        );\n    }\n  }\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}