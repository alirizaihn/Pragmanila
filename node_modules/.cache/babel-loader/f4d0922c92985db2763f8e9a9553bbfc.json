{"ast":null,"code":"const message = action => {\n  return {\n    name: action.name,\n    message: action.message,\n    subject: action.subject,\n    date: action.date\n  };\n};\n\nconst MessageReducer = (state = [], action) => {\n  // const [messages, setMessages] = useState([]);\n  let reminders = null;\n\n  switch (action.type) {\n    case 'newMessage':\n      reminders = [message(action), ...state];\n      localStorage.setItem('messages', JSON.stringify(reminders));\n      console.log(localStorage.getItem('messages'));\n      return reminders;\n\n    case 'lsMessages':\n      return action.messages;\n\n    default:\n      return state;\n  }\n};\n\nexport default MessageReducer;","map":{"version":3,"sources":["/media/bkmob/d9c3015e-7c1a-417b-9e34-17a798e49b02/pragmania-web/src/Reducers/newmessage.js"],"names":["message","action","name","subject","date","MessageReducer","state","reminders","type","localStorage","setItem","JSON","stringify","console","log","getItem","messages"],"mappings":"AAAA,MAAMA,OAAO,GAAIC,MAAD,IAAW;AACvB,SAAM;AACFC,IAAAA,IAAI,EAAED,MAAM,CAACC,IADX;AAEFF,IAAAA,OAAO,EAAEC,MAAM,CAACD,OAFd;AAGFG,IAAAA,OAAO,EAAEF,MAAM,CAACE,OAHd;AAIFC,IAAAA,IAAI,EAAEH,MAAM,CAACG;AAJX,GAAN;AAMH,CAPD;;AAQA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAE,EAAR,EAAaL,MAAb,KAAwB;AAC5C;AACA,MAAIM,SAAS,GAAG,IAAhB;;AACC,UAAON,MAAM,CAACO,IAAd;AACI,SAAK,YAAL;AACID,MAAAA,SAAS,GAAG,CAACP,OAAO,CAACC,MAAD,CAAR,EAAkB,GAAGK,KAArB,CAAZ;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,SAAf,CAAjC;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAY,CAACM,OAAb,CAAqB,UAArB,CAAZ;AACA,aAAOR,SAAP;;AAEJ,SAAK,YAAL;AACI,aAAON,MAAM,CAACe,QAAd;;AACJ;AACI,aAAOV,KAAP;AAVR;AAcH,CAjBD;;AAkBA,eAAeD,cAAf","sourcesContent":["const message = (action) =>{\n    return{\n        name: action.name,\n        message: action.message,\n        subject: action.subject,\n        date: action.date\n    }\n}\nconst MessageReducer = (state= [] , action) => {\n   // const [messages, setMessages] = useState([]);\n   let reminders = null;\n    switch(action.type){\n        case 'newMessage':\n            reminders = [message(action), ...state]; \n            localStorage.setItem('messages', JSON.stringify(reminders))\n            console.log(localStorage.getItem('messages'))\n            return reminders;\n\n        case 'lsMessages':\n            return action.messages\n        default:\n            return state;\n\n}\n\n}\nexport default MessageReducer;"]},"metadata":{},"sourceType":"module"}